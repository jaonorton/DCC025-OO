Considere o diagrama e instruções na imagem em anexo.
Lembre-se de construir todos os casos de teste.

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class TesteData {

private Date data;

public TesteData(Date initialDate) {
this.data = initialDate;
}

public Date getDataAtual() {
return new Date();
}

public void adicionarDias(int days) {
Calendar calendar = Calendar.getInstance();
calendar.setTime(this.data);
calendar.add(Calendar.DAY_OF_YEAR, days);
this.data = calendar.getTime();
}

public int getMesData() {
Calendar calendar = Calendar.getInstance();
calendar.setTime(this.data);
return calendar.get(Calendar.MONTH) + 1;
}

public int getAnoData() {
Calendar calendar = Calendar.getInstance();
calendar.setTime(this.data);
return calendar.get(Calendar.YEAR);
}

public String getDataFormatada() {
SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
return sdf.format(this.data);
}

public static Date converteStringParaData(String dataEmTexto)
throws ParseException {
SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
return sdf.parse(dataEmTexto);
}
}


<properties>
<maven.compiler.source>11</maven.compiler.source>
<maven.compiler.target>11</maven.compiler.target>
</properties>

<dependencies>
<dependency>
<groupId>org.junit.jupiter</groupId>
<artifactId>junit-jupiter-engine</artifactId>
<version>5.5.2</version>
<scope>test</scope>
</dependency>
</dependencies>



class TesteDataTest {

@Test
void deveTestarData() {
TesteData data = new TesteData(new Date());
data.adicionarDias(5);
assertEquals("02/10/2023", data.getDataFormatada());
}

@Test
void deveRetornarMesData() {
TesteData data = new TesteData(new Date());
assertEquals(11, data.getMesData());
}

@Test
void deveRetornarAnoData() {
TesteData data = new TesteData(new Date());
assertEquals(2023, data.getAnoData());
}

@Test
void deveCalcularDiferencaDias() throws ParseException {
TesteData data = new TesteData(new Date());
assertEquals(1, data.calcularDiferencaDias(data.converterStringParaData("01/12/2023")));
}

@Test
void deveCriarData() throws ParseException {
TesteData novaData = new TesteData(new Date());
novaData.setData(novaData.converterStringParaData("05/12/2023"));
assertEquals(12, novaData.getMesData());
}

}